import { describe, it, expect } from 'vitest'
import { mount } from '@vue/test-utils'
import UserStatusBadge from './UserStatusBadge.vue'

/**
 * UserStatusBadge „Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅÆ„ÉÜ„Çπ„Éà
 */
describe('UserStatusBadge', () => {
  it('active„Çπ„ÉÜ„Éº„Çø„Çπ„ÅåÊ≠£„Åó„ÅèË°®Á§∫„Åï„Çå„Çã', () => {
    const wrapper = mount(UserStatusBadge, {
      props: {
        status: 'active',
        label: '„Ç¢„ÇØ„ÉÜ„Ç£„Éñ'
      }
    })

    expect(wrapper.text()).toContain('„Ç¢„ÇØ„ÉÜ„Ç£„Éñ')
    expect(wrapper.find('.badge').classes()).toContain('badge-success')
    expect(wrapper.text()).toContain('‚úÖ')
  })

  it('inactive„Çπ„ÉÜ„Éº„Çø„Çπ„ÅåÊ≠£„Åó„ÅèË°®Á§∫„Åï„Çå„Çã', () => {
    const wrapper = mount(UserStatusBadge, {
      props: {
        status: 'inactive',
        label: 'Èùû„Ç¢„ÇØ„ÉÜ„Ç£„Éñ'
      }
    })

    expect(wrapper.text()).toContain('Èùû„Ç¢„ÇØ„ÉÜ„Ç£„Éñ')
    expect(wrapper.find('.badge').classes()).toContain('badge-neutral')
    expect(wrapper.text()).toContain('‚ö™')
  })

  it('pending„Çπ„ÉÜ„Éº„Çø„Çπ„ÅåÊ≠£„Åó„ÅèË°®Á§∫„Åï„Çå„Çã', () => {
    const wrapper = mount(UserStatusBadge, {
      props: {
        status: 'pending',
        label: 'ÊâøË™çÂæÖ„Å°'
      }
    })

    expect(wrapper.text()).toContain('ÊâøË™çÂæÖ„Å°')
    expect(wrapper.find('.badge').classes()).toContain('badge-warning')
    expect(wrapper.text()).toContain('‚è≥')
  })

  it('suspended„Çπ„ÉÜ„Éº„Çø„Çπ„ÅåÊ≠£„Åó„ÅèË°®Á§∫„Åï„Çå„Çã', () => {
    const wrapper = mount(UserStatusBadge, {
      props: {
        status: 'suspended',
        label: 'ÂÅúÊ≠¢‰∏≠'
      }
    })

    expect(wrapper.text()).toContain('ÂÅúÊ≠¢‰∏≠')
    expect(wrapper.find('.badge').classes()).toContain('badge-error')
    expect(wrapper.text()).toContain('üö´')
  })

  it('Êú™Áü•„ÅÆ„Çπ„ÉÜ„Éº„Çø„Çπ„Åå„Éá„Éï„Ç©„É´„ÉàË°®Á§∫„Åï„Çå„Çã', () => {
    const wrapper = mount(UserStatusBadge, {
      props: {
        status: 'unknown',
        label: 'unknown'
      }
    })

    expect(wrapper.text()).toContain('unknown')
    expect(wrapper.find('.badge').classes()).toContain('badge-neutral')
    expect(wrapper.text()).toContain('‚ùì')
  })
})